// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 15.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace DatabaseCodeGenerator.GameCode.Templates
{
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "G:\EventHorizon\Database\DatabaseCodeGenerator\DatabaseCodeGenerator\GameCode\Templates\DatabaseTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "15.0.0.0")]
    public partial class DatabaseTemplate : DatabaseTemplateBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            
            #line 1 "G:\EventHorizon\Database\DatabaseCodeGenerator\DatabaseCodeGenerator\GameCode\Templates\GeneratedCodeWarning.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture("//-------------------------------------------------------------------------------"));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 2 "G:\EventHorizon\Database\DatabaseCodeGenerator\DatabaseCodeGenerator\GameCode\Templates\GeneratedCodeWarning.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture("//                                                                               "));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 3 "G:\EventHorizon\Database\DatabaseCodeGenerator\DatabaseCodeGenerator\GameCode\Templates\GeneratedCodeWarning.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture("//    This code was automatically generated.                                     "));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 4 "G:\EventHorizon\Database\DatabaseCodeGenerator\DatabaseCodeGenerator\GameCode\Templates\GeneratedCodeWarning.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture("//    Changes to this file may cause incorrect behavior and will be lost if      "));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 5 "G:\EventHorizon\Database\DatabaseCodeGenerator\DatabaseCodeGenerator\GameCode\Templates\GeneratedCodeWarning.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture("//    the code is regenerated.                                                   "));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 6 "G:\EventHorizon\Database\DatabaseCodeGenerator\DatabaseCodeGenerator\GameCode\Templates\GeneratedCodeWarning.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture("//                                                                               "));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 7 "G:\EventHorizon\Database\DatabaseCodeGenerator\DatabaseCodeGenerator\GameCode\Templates\GeneratedCodeWarning.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture("//-------------------------------------------------------------------------------"));
            
            #line default
            #line hidden
            this.Write("\r\n\r\nusing System.Collections.Generic;\r\nusing ");
            
            #line 5 "G:\EventHorizon\Database\DatabaseCodeGenerator\DatabaseCodeGenerator\GameCode\Templates\DatabaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Utils.RootNamespace));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 5 "G:\EventHorizon\Database\DatabaseCodeGenerator\DatabaseCodeGenerator\GameCode\Templates\DatabaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Utils.ClassesNamespace));
            
            #line default
            #line hidden
            this.Write(";\r\nusing ");
            
            #line 6 "G:\EventHorizon\Database\DatabaseCodeGenerator\DatabaseCodeGenerator\GameCode\Templates\DatabaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Utils.RootNamespace));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 6 "G:\EventHorizon\Database\DatabaseCodeGenerator\DatabaseCodeGenerator\GameCode\Templates\DatabaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Utils.StorageNamespace));
            
            #line default
            #line hidden
            this.Write(";\r\nusing ");
            
            #line 7 "G:\EventHorizon\Database\DatabaseCodeGenerator\DatabaseCodeGenerator\GameCode\Templates\DatabaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Utils.RootNamespace));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 7 "G:\EventHorizon\Database\DatabaseCodeGenerator\DatabaseCodeGenerator\GameCode\Templates\DatabaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Utils.TypesNamespace));
            
            #line default
            #line hidden
            this.Write(";\r\n\r\nnamespace ");
            
            #line 9 "G:\EventHorizon\Database\DatabaseCodeGenerator\DatabaseCodeGenerator\GameCode\Templates\DatabaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Utils.RootNamespace));
            
            #line default
            #line hidden
            this.Write("\r\n{\r\n\tpublic partial interface I");
            
            #line 11 "G:\EventHorizon\Database\DatabaseCodeGenerator\DatabaseCodeGenerator\GameCode\Templates\DatabaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Utils.DatabaseClassName));
            
            #line default
            #line hidden
            this.Write("\r\n\t{\r\n");
            
            #line 13 "G:\EventHorizon\Database\DatabaseCodeGenerator\DatabaseCodeGenerator\GameCode\Templates\DatabaseTemplate.tt"

		foreach (var item in Schema.Configurations)
        {

            
            #line default
            #line hidden
            this.Write("\t\t");
            
            #line 17 "G:\EventHorizon\Database\DatabaseCodeGenerator\DatabaseCodeGenerator\GameCode\Templates\DatabaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Utils.DataClassName(item.name) + " " + item.name));
            
            #line default
            #line hidden
            this.Write(" { get; }\r\n");
            
            #line 18 "G:\EventHorizon\Database\DatabaseCodeGenerator\DatabaseCodeGenerator\GameCode\Templates\DatabaseTemplate.tt"

        }

            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 22 "G:\EventHorizon\Database\DatabaseCodeGenerator\DatabaseCodeGenerator\GameCode\Templates\DatabaseTemplate.tt"

		foreach (var item in Schema.Objects)
        {

            
            #line default
            #line hidden
            this.Write("\t\tIEnumerable<");
            
            #line 26 "G:\EventHorizon\Database\DatabaseCodeGenerator\DatabaseCodeGenerator\GameCode\Templates\DatabaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Utils.DataClassName(item.name)));
            
            #line default
            #line hidden
            this.Write("> ");
            
            #line 26 "G:\EventHorizon\Database\DatabaseCodeGenerator\DatabaseCodeGenerator\GameCode\Templates\DatabaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Utils.ObjectListPropertyName(item.name)));
            
            #line default
            #line hidden
            this.Write(" { get; }\r\n");
            
            #line 27 "G:\EventHorizon\Database\DatabaseCodeGenerator\DatabaseCodeGenerator\GameCode\Templates\DatabaseTemplate.tt"

        }

            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 31 "G:\EventHorizon\Database\DatabaseCodeGenerator\DatabaseCodeGenerator\GameCode\Templates\DatabaseTemplate.tt"

		foreach (var item in Schema.Objects)
        {

            
            #line default
            #line hidden
            this.Write("\t\t");
            
            #line 35 "G:\EventHorizon\Database\DatabaseCodeGenerator\DatabaseCodeGenerator\GameCode\Templates\DatabaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Utils.DataClassName(item.name) + " " + Utils.ObjectGetterName(item.name)));
            
            #line default
            #line hidden
            this.Write("(ItemId<");
            
            #line 35 "G:\EventHorizon\Database\DatabaseCodeGenerator\DatabaseCodeGenerator\GameCode\Templates\DatabaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Utils.DataClassName(item.name)));
            
            #line default
            #line hidden
            this.Write("> id);\r\n");
            
            #line 36 "G:\EventHorizon\Database\DatabaseCodeGenerator\DatabaseCodeGenerator\GameCode\Templates\DatabaseTemplate.tt"

        }

            
            #line default
            #line hidden
            this.Write("\r\n        Image GetImage(string name);\r\n        AudioClip GetAudioClip(string nam" +
                    "e);\r\n        string GetLocalization(string language);\r\n\t}\r\n\r\n    public partial " +
                    "class ");
            
            #line 45 "G:\EventHorizon\Database\DatabaseCodeGenerator\DatabaseCodeGenerator\GameCode\Templates\DatabaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Utils.DatabaseClassName));
            
            #line default
            #line hidden
            this.Write(" : I");
            
            #line 45 "G:\EventHorizon\Database\DatabaseCodeGenerator\DatabaseCodeGenerator\GameCode\Templates\DatabaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Utils.DatabaseClassName));
            
            #line default
            #line hidden
            this.Write(@"
    {
        partial void OnDataLoaded();

        protected void Load(IDataStorage storage, IJsonSerializer serializer)
        {
            Clear();
            _storage = storage;
            _content = new DatabaseContent(_storage, serializer);

");
            
            #line 55 "G:\EventHorizon\Database\DatabaseCodeGenerator\DatabaseCodeGenerator\GameCode\Templates\DatabaseTemplate.tt"

			foreach (var item in Schema.Objects)
			{

            
            #line default
            #line hidden
            this.Write("            foreach (var item in _content.");
            
            #line 59 "G:\EventHorizon\Database\DatabaseCodeGenerator\DatabaseCodeGenerator\GameCode\Templates\DatabaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Utils.ObjectListPropertyName(item.name)));
            
            #line default
            #line hidden
            this.Write(")\r\n                ");
            
            #line 60 "G:\EventHorizon\Database\DatabaseCodeGenerator\DatabaseCodeGenerator\GameCode\Templates\DatabaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Utils.ObjectGetterName(item.name)));
            
            #line default
            #line hidden
            this.Write("(new ItemId<");
            
            #line 60 "G:\EventHorizon\Database\DatabaseCodeGenerator\DatabaseCodeGenerator\GameCode\Templates\DatabaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Utils.DataClassName(item.name)));
            
            #line default
            #line hidden
            this.Write(">(item.Id));\r\n");
            
            #line 61 "G:\EventHorizon\Database\DatabaseCodeGenerator\DatabaseCodeGenerator\GameCode\Templates\DatabaseTemplate.tt"

			}

            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 65 "G:\EventHorizon\Database\DatabaseCodeGenerator\DatabaseCodeGenerator\GameCode\Templates\DatabaseTemplate.tt"

			foreach (var item in Schema.Configurations)
			{

            
            #line default
            #line hidden
            this.Write("\t\t\t");
            
            #line 69 "G:\EventHorizon\Database\DatabaseCodeGenerator\DatabaseCodeGenerator\GameCode\Templates\DatabaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(item.name + " = " + Utils.DataClassName(item.name)));
            
            #line default
            #line hidden
            this.Write(".Create(_content.");
            
            #line 69 "G:\EventHorizon\Database\DatabaseCodeGenerator\DatabaseCodeGenerator\GameCode\Templates\DatabaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(item.name));
            
            #line default
            #line hidden
            this.Write(", this);\r\n");
            
            #line 70 "G:\EventHorizon\Database\DatabaseCodeGenerator\DatabaseCodeGenerator\GameCode\Templates\DatabaseTemplate.tt"

			}

            
            #line default
            #line hidden
            this.Write("\r\n            OnDataLoaded();\r\n        }\r\n\r\n");
            
            #line 77 "G:\EventHorizon\Database\DatabaseCodeGenerator\DatabaseCodeGenerator\GameCode\Templates\DatabaseTemplate.tt"

		foreach (var item in Schema.Configurations)
        {

            
            #line default
            #line hidden
            this.Write("\t\tpublic ");
            
            #line 81 "G:\EventHorizon\Database\DatabaseCodeGenerator\DatabaseCodeGenerator\GameCode\Templates\DatabaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Utils.DataClassName(item.name) + " " + item.name));
            
            #line default
            #line hidden
            this.Write(" { get; private set; }\r\n");
            
            #line 82 "G:\EventHorizon\Database\DatabaseCodeGenerator\DatabaseCodeGenerator\GameCode\Templates\DatabaseTemplate.tt"

        }

            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 86 "G:\EventHorizon\Database\DatabaseCodeGenerator\DatabaseCodeGenerator\GameCode\Templates\DatabaseTemplate.tt"

		foreach (var item in Schema.Objects)
        {

            
            #line default
            #line hidden
            this.Write("\t\tpublic IEnumerable<");
            
            #line 90 "G:\EventHorizon\Database\DatabaseCodeGenerator\DatabaseCodeGenerator\GameCode\Templates\DatabaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Utils.DataClassName(item.name)));
            
            #line default
            #line hidden
            this.Write("> ");
            
            #line 90 "G:\EventHorizon\Database\DatabaseCodeGenerator\DatabaseCodeGenerator\GameCode\Templates\DatabaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Utils.ObjectListPropertyName(item.name)));
            
            #line default
            #line hidden
            this.Write(" => ");
            
            #line 90 "G:\EventHorizon\Database\DatabaseCodeGenerator\DatabaseCodeGenerator\GameCode\Templates\DatabaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DataMember(item.name)));
            
            #line default
            #line hidden
            this.Write(".Values;\r\n");
            
            #line 91 "G:\EventHorizon\Database\DatabaseCodeGenerator\DatabaseCodeGenerator\GameCode\Templates\DatabaseTemplate.tt"

        }

            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 95 "G:\EventHorizon\Database\DatabaseCodeGenerator\DatabaseCodeGenerator\GameCode\Templates\DatabaseTemplate.tt"

		foreach (var item in Schema.Objects)
        {

            
            #line default
            #line hidden
            this.Write("\t\tpublic ");
            
            #line 99 "G:\EventHorizon\Database\DatabaseCodeGenerator\DatabaseCodeGenerator\GameCode\Templates\DatabaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Utils.DataClassName(item.name) + " " + Utils.ObjectGetterName(item.name)));
            
            #line default
            #line hidden
            this.Write("(ItemId<");
            
            #line 99 "G:\EventHorizon\Database\DatabaseCodeGenerator\DatabaseCodeGenerator\GameCode\Templates\DatabaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Utils.DataClassName(item.name)));
            
            #line default
            #line hidden
            this.Write("> id) \r\n\t\t{\r\n            if (");
            
            #line 101 "G:\EventHorizon\Database\DatabaseCodeGenerator\DatabaseCodeGenerator\GameCode\Templates\DatabaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DataMember(item.name)));
            
            #line default
            #line hidden
            this.Write(".TryGetValue(id.Value, out var item)) return item;\r\n            var serializable " +
                    "= _content?.");
            
            #line 102 "G:\EventHorizon\Database\DatabaseCodeGenerator\DatabaseCodeGenerator\GameCode\Templates\DatabaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Utils.ObjectGetterName(item.name)));
            
            #line default
            #line hidden
            this.Write("(id.Value);\r\n            return serializable == null ? null : ");
            
            #line 103 "G:\EventHorizon\Database\DatabaseCodeGenerator\DatabaseCodeGenerator\GameCode\Templates\DatabaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Utils.DataClassName(item.name)));
            
            #line default
            #line hidden
            this.Write(".Create(serializable, this);\r\n\t\t}\r\n");
            
            #line 105 "G:\EventHorizon\Database\DatabaseCodeGenerator\DatabaseCodeGenerator\GameCode\Templates\DatabaseTemplate.tt"

        }

            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 109 "G:\EventHorizon\Database\DatabaseCodeGenerator\DatabaseCodeGenerator\GameCode\Templates\DatabaseTemplate.tt"

		foreach (var item in Schema.Objects)
        {

            
            #line default
            #line hidden
            this.Write("\t\tpublic void ");
            
            #line 113 "G:\EventHorizon\Database\DatabaseCodeGenerator\DatabaseCodeGenerator\GameCode\Templates\DatabaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Utils.ObjectSetterName(item.name)));
            
            #line default
            #line hidden
            this.Write("(int id, ");
            
            #line 113 "G:\EventHorizon\Database\DatabaseCodeGenerator\DatabaseCodeGenerator\GameCode\Templates\DatabaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Utils.DataClassName(item.name)));
            
            #line default
            #line hidden
            this.Write(" item) { ");
            
            #line 113 "G:\EventHorizon\Database\DatabaseCodeGenerator\DatabaseCodeGenerator\GameCode\Templates\DatabaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DataMember(item.name)));
            
            #line default
            #line hidden
            this.Write(".Add(id, item); }\r\n");
            
            #line 114 "G:\EventHorizon\Database\DatabaseCodeGenerator\DatabaseCodeGenerator\GameCode\Templates\DatabaseTemplate.tt"

        }

            
            #line default
            #line hidden
            this.Write(@"
        public Image GetImage(string name) { return _content?.GetImage(name) ?? Image.Empty; }
        public AudioClip GetAudioClip(string name) { return _content?.GetAudioClip(name) ?? AudioClip.Empty; }
        public string GetLocalization(string language) { return _content?.GetLocalization(language); }

        private void Clear()
        {
            _content = null;
            _storage = null;

");
            
            #line 127 "G:\EventHorizon\Database\DatabaseCodeGenerator\DatabaseCodeGenerator\GameCode\Templates\DatabaseTemplate.tt"

			foreach (var item in Schema.Objects)
			{

            
            #line default
            #line hidden
            this.Write("\t\t\t");
            
            #line 131 "G:\EventHorizon\Database\DatabaseCodeGenerator\DatabaseCodeGenerator\GameCode\Templates\DatabaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DataMember(item.name)));
            
            #line default
            #line hidden
            this.Write(".Clear();\r\n");
            
            #line 132 "G:\EventHorizon\Database\DatabaseCodeGenerator\DatabaseCodeGenerator\GameCode\Templates\DatabaseTemplate.tt"

			}

            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 136 "G:\EventHorizon\Database\DatabaseCodeGenerator\DatabaseCodeGenerator\GameCode\Templates\DatabaseTemplate.tt"

			foreach (var item in Schema.Configurations)
			{

            
            #line default
            #line hidden
            this.Write("\t\t\t");
            
            #line 140 "G:\EventHorizon\Database\DatabaseCodeGenerator\DatabaseCodeGenerator\GameCode\Templates\DatabaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(item.name));
            
            #line default
            #line hidden
            this.Write(" = null;\r\n");
            
            #line 141 "G:\EventHorizon\Database\DatabaseCodeGenerator\DatabaseCodeGenerator\GameCode\Templates\DatabaseTemplate.tt"

			}

            
            #line default
            #line hidden
            this.Write("        }\r\n\r\n");
            
            #line 146 "G:\EventHorizon\Database\DatabaseCodeGenerator\DatabaseCodeGenerator\GameCode\Templates\DatabaseTemplate.tt"

		foreach (var item in Schema.Objects)
        {

            
            #line default
            #line hidden
            this.Write("\t\tprivate readonly Dictionary<int, ");
            
            #line 150 "G:\EventHorizon\Database\DatabaseCodeGenerator\DatabaseCodeGenerator\GameCode\Templates\DatabaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Utils.DataClassName(item.name)));
            
            #line default
            #line hidden
            this.Write("> ");
            
            #line 150 "G:\EventHorizon\Database\DatabaseCodeGenerator\DatabaseCodeGenerator\GameCode\Templates\DatabaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DataMember(item.name)));
            
            #line default
            #line hidden
            this.Write(" = new Dictionary<int, ");
            
            #line 150 "G:\EventHorizon\Database\DatabaseCodeGenerator\DatabaseCodeGenerator\GameCode\Templates\DatabaseTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Utils.DataClassName(item.name)));
            
            #line default
            #line hidden
            this.Write(">();\r\n");
            
            #line 151 "G:\EventHorizon\Database\DatabaseCodeGenerator\DatabaseCodeGenerator\GameCode\Templates\DatabaseTemplate.tt"

        }

            
            #line default
            #line hidden
            this.Write("\r\n        private DatabaseContent _content;\r\n        private IDataStorage _storag" +
                    "e;\r\n\t}\r\n}\r\n\r\n");
            return this.GenerationEnvironment.ToString();
        }
        
        #line 160 "G:\EventHorizon\Database\DatabaseCodeGenerator\DatabaseCodeGenerator\GameCode\Templates\DatabaseTemplate.tt"
 
	private static string DataMember(string name) 
	{ 		
		return "_" + char.ToLower(name[0]) + name.Substring(1) + "Map"; 
	}

        
        #line default
        #line hidden
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "15.0.0.0")]
    public class DatabaseTemplateBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
